import xml.etree.ElementTree as ETdef serialize_to_xml(dictionary, filename):    """Serializes a Python dictionary to XML and saves it to a file.    Args:        dictionary: The Python dictionary to serialize.        filename: The filename to save the XML data.    """    root = ET.Element("data")    for key, value in dictionary.items():        element = ET.SubElement(root, key)        element.text = str(value)  # Ensure type conversion to string    with open(filename, "wb") as f:        ET.indent(root, space="  ", level=0)  # Optional: Pretty print XML        ET.write(f, encoding="utf-8", xml_declaration=True)    print(f"Dictionary serialized to '{filename}'.")def deserialize_from_xml(filename):    """Deserializes XML data from a file to a Python dictionary.    Args:        filename: The filename containing the XML data.    Returns:        A Python dictionary created from the XML data.    """    try:        tree = ET.parse(filename)        root = tree.getroot()        data = {}        for child in root:            data[child.tag] = child.text        return data    except FileNotFoundError:        print(f"Error: File '{filename}' not found.")        return Noneif __name__ == "__main__":    sample_dict = {"name": "John", "age": "28", "city": "New York"}    xml_file = "data.xml"    serialize_to_xml(sample_dict, xml_file)    print(f"Dictionary serialized to {xml_file}")    deserialized_data = deserialize_from_xml(xml_file)    print("\nDeserialized Data:")    print(deserialized_data)